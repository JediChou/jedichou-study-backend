//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace CodeSnippetLab.ESignOfficialSite {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ESignWSESoap", Namespace="http://tempuri.org/")]
    public partial class ESignWSE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SayHelloOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendErrorMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutGPDPOXMLFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutXMLFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutFileStreamFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutSignedFileByStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileUrlByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStreamByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStringByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileIDLatestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileSignInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStreamLatestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileUrlLatestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIDListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUrlListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePathByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutSignInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSignStyleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateXMLFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoByNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApprovedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCertTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ESignWSE() {
            this.Url = global::CodeSnippetLab.Properties.Settings.Default.CodeSnippetLab_ESignOfficialSite_ESignWSE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SayHelloCompletedEventHandler SayHelloCompleted;
        
        /// <remarks/>
        public event SendErrorMsgCompletedEventHandler SendErrorMsgCompleted;
        
        /// <remarks/>
        public event PutGPDPOXMLFileCompletedEventHandler PutGPDPOXMLFileCompleted;
        
        /// <remarks/>
        public event PutXMLFileCompletedEventHandler PutXMLFileCompleted;
        
        /// <remarks/>
        public event PutFileStreamFileCompletedEventHandler PutFileStreamFileCompleted;
        
        /// <remarks/>
        public event PutSignedFileByStreamCompletedEventHandler PutSignedFileByStreamCompleted;
        
        /// <remarks/>
        public event GetFileUrlByIDCompletedEventHandler GetFileUrlByIDCompleted;
        
        /// <remarks/>
        public event GetFileStreamByIDCompletedEventHandler GetFileStreamByIDCompleted;
        
        /// <remarks/>
        public event GetFileStringByIDCompletedEventHandler GetFileStringByIDCompleted;
        
        /// <remarks/>
        public event GetFileIDLatestCompletedEventHandler GetFileIDLatestCompleted;
        
        /// <remarks/>
        public event GetFileSignInfoCompletedEventHandler GetFileSignInfoCompleted;
        
        /// <remarks/>
        public event GetFileStreamLatestCompletedEventHandler GetFileStreamLatestCompleted;
        
        /// <remarks/>
        public event GetFileUrlLatestCompletedEventHandler GetFileUrlLatestCompleted;
        
        /// <remarks/>
        public event GetIDListCompletedEventHandler GetIDListCompleted;
        
        /// <remarks/>
        public event GetUrlListCompletedEventHandler GetUrlListCompleted;
        
        /// <remarks/>
        public event GetFilePathByIdCompletedEventHandler GetFilePathByIdCompleted;
        
        /// <remarks/>
        public event PutSignInfoByIDCompletedEventHandler PutSignInfoByIDCompleted;
        
        /// <remarks/>
        public event SetSignStyleCompletedEventHandler SetSignStyleCompleted;
        
        /// <remarks/>
        public event UpdateXMLFileCompletedEventHandler UpdateXMLFileCompleted;
        
        /// <remarks/>
        public event GetFileInfoByNoCompletedEventHandler GetFileInfoByNoCompleted;
        
        /// <remarks/>
        public event UpdateApprovedDataCompletedEventHandler UpdateApprovedDataCompleted;
        
        /// <remarks/>
        public event GetServiceListCompletedEventHandler GetServiceListCompleted;
        
        /// <remarks/>
        public event GetCertTypeCompletedEventHandler GetCertTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SayHello", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SayHello() {
            object[] results = this.Invoke("SayHello", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SayHelloAsync() {
            this.SayHelloAsync(null);
        }
        
        /// <remarks/>
        public void SayHelloAsync(object userState) {
            if ((this.SayHelloOperationCompleted == null)) {
                this.SayHelloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSayHelloOperationCompleted);
            }
            this.InvokeAsync("SayHello", new object[0], this.SayHelloOperationCompleted, userState);
        }
        
        private void OnSayHelloOperationCompleted(object arg) {
            if ((this.SayHelloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SayHelloCompleted(this, new SayHelloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendErrorMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendErrorMsg(System.DateTime Date, string Thread, string Level, string Logger, string Message, string Exception) {
            this.Invoke("SendErrorMsg", new object[] {
                        Date,
                        Thread,
                        Level,
                        Logger,
                        Message,
                        Exception});
        }
        
        /// <remarks/>
        public void SendErrorMsgAsync(System.DateTime Date, string Thread, string Level, string Logger, string Message, string Exception) {
            this.SendErrorMsgAsync(Date, Thread, Level, Logger, Message, Exception, null);
        }
        
        /// <remarks/>
        public void SendErrorMsgAsync(System.DateTime Date, string Thread, string Level, string Logger, string Message, string Exception, object userState) {
            if ((this.SendErrorMsgOperationCompleted == null)) {
                this.SendErrorMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendErrorMsgOperationCompleted);
            }
            this.InvokeAsync("SendErrorMsg", new object[] {
                        Date,
                        Thread,
                        Level,
                        Logger,
                        Message,
                        Exception}, this.SendErrorMsgOperationCompleted, userState);
        }
        
        private void OnSendErrorMsgOperationCompleted(object arg) {
            if ((this.SendErrorMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendErrorMsgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutGPDPOXMLFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutGPDPOXMLFile(string pXmlString) {
            object[] results = this.Invoke("PutGPDPOXMLFile", new object[] {
                        pXmlString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutGPDPOXMLFileAsync(string pXmlString) {
            this.PutGPDPOXMLFileAsync(pXmlString, null);
        }
        
        /// <remarks/>
        public void PutGPDPOXMLFileAsync(string pXmlString, object userState) {
            if ((this.PutGPDPOXMLFileOperationCompleted == null)) {
                this.PutGPDPOXMLFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutGPDPOXMLFileOperationCompleted);
            }
            this.InvokeAsync("PutGPDPOXMLFile", new object[] {
                        pXmlString}, this.PutGPDPOXMLFileOperationCompleted, userState);
        }
        
        private void OnPutGPDPOXMLFileOperationCompleted(object arg) {
            if ((this.PutGPDPOXMLFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutGPDPOXMLFileCompleted(this, new PutGPDPOXMLFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutXMLFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutXMLFile(string pXmlString, string pSysType) {
            object[] results = this.Invoke("PutXMLFile", new object[] {
                        pXmlString,
                        pSysType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutXMLFileAsync(string pXmlString, string pSysType) {
            this.PutXMLFileAsync(pXmlString, pSysType, null);
        }
        
        /// <remarks/>
        public void PutXMLFileAsync(string pXmlString, string pSysType, object userState) {
            if ((this.PutXMLFileOperationCompleted == null)) {
                this.PutXMLFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutXMLFileOperationCompleted);
            }
            this.InvokeAsync("PutXMLFile", new object[] {
                        pXmlString,
                        pSysType}, this.PutXMLFileOperationCompleted, userState);
        }
        
        private void OnPutXMLFileOperationCompleted(object arg) {
            if ((this.PutXMLFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutXMLFileCompleted(this, new PutXMLFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutFileStreamFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutFileStreamFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileStream, string pSysType) {
            object[] results = this.Invoke("PutFileStreamFile", new object[] {
                        fileStream,
                        pSysType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutFileStreamFileAsync(byte[] fileStream, string pSysType) {
            this.PutFileStreamFileAsync(fileStream, pSysType, null);
        }
        
        /// <remarks/>
        public void PutFileStreamFileAsync(byte[] fileStream, string pSysType, object userState) {
            if ((this.PutFileStreamFileOperationCompleted == null)) {
                this.PutFileStreamFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutFileStreamFileOperationCompleted);
            }
            this.InvokeAsync("PutFileStreamFile", new object[] {
                        fileStream,
                        pSysType}, this.PutFileStreamFileOperationCompleted, userState);
        }
        
        private void OnPutFileStreamFileOperationCompleted(object arg) {
            if ((this.PutFileStreamFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutFileStreamFileCompleted(this, new PutFileStreamFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutSignedFileByStream", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutSignedFileByStream([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pArrSrc, string pSeedFileID, string pSysType) {
            object[] results = this.Invoke("PutSignedFileByStream", new object[] {
                        pArrSrc,
                        pSeedFileID,
                        pSysType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutSignedFileByStreamAsync(byte[] pArrSrc, string pSeedFileID, string pSysType) {
            this.PutSignedFileByStreamAsync(pArrSrc, pSeedFileID, pSysType, null);
        }
        
        /// <remarks/>
        public void PutSignedFileByStreamAsync(byte[] pArrSrc, string pSeedFileID, string pSysType, object userState) {
            if ((this.PutSignedFileByStreamOperationCompleted == null)) {
                this.PutSignedFileByStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutSignedFileByStreamOperationCompleted);
            }
            this.InvokeAsync("PutSignedFileByStream", new object[] {
                        pArrSrc,
                        pSeedFileID,
                        pSysType}, this.PutSignedFileByStreamOperationCompleted, userState);
        }
        
        private void OnPutSignedFileByStreamOperationCompleted(object arg) {
            if ((this.PutSignedFileByStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutSignedFileByStreamCompleted(this, new PutSignedFileByStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileUrlByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileUrlByID(string pFileID) {
            object[] results = this.Invoke("GetFileUrlByID", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileUrlByIDAsync(string pFileID) {
            this.GetFileUrlByIDAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileUrlByIDAsync(string pFileID, object userState) {
            if ((this.GetFileUrlByIDOperationCompleted == null)) {
                this.GetFileUrlByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileUrlByIDOperationCompleted);
            }
            this.InvokeAsync("GetFileUrlByID", new object[] {
                        pFileID}, this.GetFileUrlByIDOperationCompleted, userState);
        }
        
        private void OnGetFileUrlByIDOperationCompleted(object arg) {
            if ((this.GetFileUrlByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileUrlByIDCompleted(this, new GetFileUrlByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileStreamByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileStreamByID(string pFileID) {
            object[] results = this.Invoke("GetFileStreamByID", new object[] {
                        pFileID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStreamByIDAsync(string pFileID) {
            this.GetFileStreamByIDAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileStreamByIDAsync(string pFileID, object userState) {
            if ((this.GetFileStreamByIDOperationCompleted == null)) {
                this.GetFileStreamByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStreamByIDOperationCompleted);
            }
            this.InvokeAsync("GetFileStreamByID", new object[] {
                        pFileID}, this.GetFileStreamByIDOperationCompleted, userState);
        }
        
        private void OnGetFileStreamByIDOperationCompleted(object arg) {
            if ((this.GetFileStreamByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStreamByIDCompleted(this, new GetFileStreamByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileStringByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileStringByID(string pFileID) {
            object[] results = this.Invoke("GetFileStringByID", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStringByIDAsync(string pFileID) {
            this.GetFileStringByIDAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileStringByIDAsync(string pFileID, object userState) {
            if ((this.GetFileStringByIDOperationCompleted == null)) {
                this.GetFileStringByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStringByIDOperationCompleted);
            }
            this.InvokeAsync("GetFileStringByID", new object[] {
                        pFileID}, this.GetFileStringByIDOperationCompleted, userState);
        }
        
        private void OnGetFileStringByIDOperationCompleted(object arg) {
            if ((this.GetFileStringByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStringByIDCompleted(this, new GetFileStringByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileIDLatest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileIDLatest(string pFileID) {
            object[] results = this.Invoke("GetFileIDLatest", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileIDLatestAsync(string pFileID) {
            this.GetFileIDLatestAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileIDLatestAsync(string pFileID, object userState) {
            if ((this.GetFileIDLatestOperationCompleted == null)) {
                this.GetFileIDLatestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileIDLatestOperationCompleted);
            }
            this.InvokeAsync("GetFileIDLatest", new object[] {
                        pFileID}, this.GetFileIDLatestOperationCompleted, userState);
        }
        
        private void OnGetFileIDLatestOperationCompleted(object arg) {
            if ((this.GetFileIDLatestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileIDLatestCompleted(this, new GetFileIDLatestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileSignInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileSignInfo(string pFileID) {
            object[] results = this.Invoke("GetFileSignInfo", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileSignInfoAsync(string pFileID) {
            this.GetFileSignInfoAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileSignInfoAsync(string pFileID, object userState) {
            if ((this.GetFileSignInfoOperationCompleted == null)) {
                this.GetFileSignInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileSignInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileSignInfo", new object[] {
                        pFileID}, this.GetFileSignInfoOperationCompleted, userState);
        }
        
        private void OnGetFileSignInfoOperationCompleted(object arg) {
            if ((this.GetFileSignInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileSignInfoCompleted(this, new GetFileSignInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileStreamLatest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileStreamLatest(string pFileID) {
            object[] results = this.Invoke("GetFileStreamLatest", new object[] {
                        pFileID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStreamLatestAsync(string pFileID) {
            this.GetFileStreamLatestAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileStreamLatestAsync(string pFileID, object userState) {
            if ((this.GetFileStreamLatestOperationCompleted == null)) {
                this.GetFileStreamLatestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStreamLatestOperationCompleted);
            }
            this.InvokeAsync("GetFileStreamLatest", new object[] {
                        pFileID}, this.GetFileStreamLatestOperationCompleted, userState);
        }
        
        private void OnGetFileStreamLatestOperationCompleted(object arg) {
            if ((this.GetFileStreamLatestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStreamLatestCompleted(this, new GetFileStreamLatestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileUrlLatest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileUrlLatest(string pFileID) {
            object[] results = this.Invoke("GetFileUrlLatest", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileUrlLatestAsync(string pFileID) {
            this.GetFileUrlLatestAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFileUrlLatestAsync(string pFileID, object userState) {
            if ((this.GetFileUrlLatestOperationCompleted == null)) {
                this.GetFileUrlLatestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileUrlLatestOperationCompleted);
            }
            this.InvokeAsync("GetFileUrlLatest", new object[] {
                        pFileID}, this.GetFileUrlLatestOperationCompleted, userState);
        }
        
        private void OnGetFileUrlLatestOperationCompleted(object arg) {
            if ((this.GetFileUrlLatestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileUrlLatestCompleted(this, new GetFileUrlLatestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIDList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetIDList(string pFileID) {
            object[] results = this.Invoke("GetIDList", new object[] {
                        pFileID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIDListAsync(string pFileID) {
            this.GetIDListAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetIDListAsync(string pFileID, object userState) {
            if ((this.GetIDListOperationCompleted == null)) {
                this.GetIDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIDListOperationCompleted);
            }
            this.InvokeAsync("GetIDList", new object[] {
                        pFileID}, this.GetIDListOperationCompleted, userState);
        }
        
        private void OnGetIDListOperationCompleted(object arg) {
            if ((this.GetIDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIDListCompleted(this, new GetIDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUrlList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUrlList(string pFileID) {
            object[] results = this.Invoke("GetUrlList", new object[] {
                        pFileID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUrlListAsync(string pFileID) {
            this.GetUrlListAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetUrlListAsync(string pFileID, object userState) {
            if ((this.GetUrlListOperationCompleted == null)) {
                this.GetUrlListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUrlListOperationCompleted);
            }
            this.InvokeAsync("GetUrlList", new object[] {
                        pFileID}, this.GetUrlListOperationCompleted, userState);
        }
        
        private void OnGetUrlListOperationCompleted(object arg) {
            if ((this.GetUrlListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUrlListCompleted(this, new GetUrlListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePathById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilePathById(string pFileID) {
            object[] results = this.Invoke("GetFilePathById", new object[] {
                        pFileID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePathByIdAsync(string pFileID) {
            this.GetFilePathByIdAsync(pFileID, null);
        }
        
        /// <remarks/>
        public void GetFilePathByIdAsync(string pFileID, object userState) {
            if ((this.GetFilePathByIdOperationCompleted == null)) {
                this.GetFilePathByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePathByIdOperationCompleted);
            }
            this.InvokeAsync("GetFilePathById", new object[] {
                        pFileID}, this.GetFilePathByIdOperationCompleted, userState);
        }
        
        private void OnGetFilePathByIdOperationCompleted(object arg) {
            if ((this.GetFilePathByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePathByIdCompleted(this, new GetFilePathByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PutSignInfoByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PutSignInfoByID(string sFile_ID, string sSignInfo) {
            object[] results = this.Invoke("PutSignInfoByID", new object[] {
                        sFile_ID,
                        sSignInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PutSignInfoByIDAsync(string sFile_ID, string sSignInfo) {
            this.PutSignInfoByIDAsync(sFile_ID, sSignInfo, null);
        }
        
        /// <remarks/>
        public void PutSignInfoByIDAsync(string sFile_ID, string sSignInfo, object userState) {
            if ((this.PutSignInfoByIDOperationCompleted == null)) {
                this.PutSignInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutSignInfoByIDOperationCompleted);
            }
            this.InvokeAsync("PutSignInfoByID", new object[] {
                        sFile_ID,
                        sSignInfo}, this.PutSignInfoByIDOperationCompleted, userState);
        }
        
        private void OnPutSignInfoByIDOperationCompleted(object arg) {
            if ((this.PutSignInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutSignInfoByIDCompleted(this, new PutSignInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSignStyle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetSignStyle(string sFileID, string sStyle, string sReason) {
            object[] results = this.Invoke("SetSignStyle", new object[] {
                        sFileID,
                        sStyle,
                        sReason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetSignStyleAsync(string sFileID, string sStyle, string sReason) {
            this.SetSignStyleAsync(sFileID, sStyle, sReason, null);
        }
        
        /// <remarks/>
        public void SetSignStyleAsync(string sFileID, string sStyle, string sReason, object userState) {
            if ((this.SetSignStyleOperationCompleted == null)) {
                this.SetSignStyleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSignStyleOperationCompleted);
            }
            this.InvokeAsync("SetSignStyle", new object[] {
                        sFileID,
                        sStyle,
                        sReason}, this.SetSignStyleOperationCompleted, userState);
        }
        
        private void OnSetSignStyleOperationCompleted(object arg) {
            if ((this.SetSignStyleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSignStyleCompleted(this, new SetSignStyleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateXMLFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateXMLFile(string pFileID, string sElementName, string sValue) {
            object[] results = this.Invoke("UpdateXMLFile", new object[] {
                        pFileID,
                        sElementName,
                        sValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateXMLFileAsync(string pFileID, string sElementName, string sValue) {
            this.UpdateXMLFileAsync(pFileID, sElementName, sValue, null);
        }
        
        /// <remarks/>
        public void UpdateXMLFileAsync(string pFileID, string sElementName, string sValue, object userState) {
            if ((this.UpdateXMLFileOperationCompleted == null)) {
                this.UpdateXMLFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateXMLFileOperationCompleted);
            }
            this.InvokeAsync("UpdateXMLFile", new object[] {
                        pFileID,
                        sElementName,
                        sValue}, this.UpdateXMLFileOperationCompleted, userState);
        }
        
        private void OnUpdateXMLFileOperationCompleted(object arg) {
            if ((this.UpdateXMLFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateXMLFileCompleted(this, new UpdateXMLFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileInfoByNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileInfoByNo(string sServer_ID, string sCase_No, string sType) {
            object[] results = this.Invoke("GetFileInfoByNo", new object[] {
                        sServer_ID,
                        sCase_No,
                        sType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoByNoAsync(string sServer_ID, string sCase_No, string sType) {
            this.GetFileInfoByNoAsync(sServer_ID, sCase_No, sType, null);
        }
        
        /// <remarks/>
        public void GetFileInfoByNoAsync(string sServer_ID, string sCase_No, string sType, object userState) {
            if ((this.GetFileInfoByNoOperationCompleted == null)) {
                this.GetFileInfoByNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoByNoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfoByNo", new object[] {
                        sServer_ID,
                        sCase_No,
                        sType}, this.GetFileInfoByNoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoByNoOperationCompleted(object arg) {
            if ((this.GetFileInfoByNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoByNoCompleted(this, new GetFileInfoByNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateApprovedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApprovedData(string sFile_ID, string sServer_ID, string sCase_NO) {
            object[] results = this.Invoke("UpdateApprovedData", new object[] {
                        sFile_ID,
                        sServer_ID,
                        sCase_NO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApprovedDataAsync(string sFile_ID, string sServer_ID, string sCase_NO) {
            this.UpdateApprovedDataAsync(sFile_ID, sServer_ID, sCase_NO, null);
        }
        
        /// <remarks/>
        public void UpdateApprovedDataAsync(string sFile_ID, string sServer_ID, string sCase_NO, object userState) {
            if ((this.UpdateApprovedDataOperationCompleted == null)) {
                this.UpdateApprovedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApprovedDataOperationCompleted);
            }
            this.InvokeAsync("UpdateApprovedData", new object[] {
                        sFile_ID,
                        sServer_ID,
                        sCase_NO}, this.UpdateApprovedDataOperationCompleted, userState);
        }
        
        private void OnUpdateApprovedDataOperationCompleted(object arg) {
            if ((this.UpdateApprovedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApprovedDataCompleted(this, new UpdateApprovedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceList() {
            object[] results = this.Invoke("GetServiceList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceListAsync() {
            this.GetServiceListAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceListAsync(object userState) {
            if ((this.GetServiceListOperationCompleted == null)) {
                this.GetServiceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceListOperationCompleted);
            }
            this.InvokeAsync("GetServiceList", new object[0], this.GetServiceListOperationCompleted, userState);
        }
        
        private void OnGetServiceListOperationCompleted(object arg) {
            if ((this.GetServiceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceListCompleted(this, new GetServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCertType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCertType() {
            object[] results = this.Invoke("GetCertType", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCertTypeAsync() {
            this.GetCertTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetCertTypeAsync(object userState) {
            if ((this.GetCertTypeOperationCompleted == null)) {
                this.GetCertTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCertTypeOperationCompleted);
            }
            this.InvokeAsync("GetCertType", new object[0], this.GetCertTypeOperationCompleted, userState);
        }
        
        private void OnGetCertTypeOperationCompleted(object arg) {
            if ((this.GetCertTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCertTypeCompleted(this, new GetCertTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SayHelloCompletedEventHandler(object sender, SayHelloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SayHelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SayHelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendErrorMsgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PutGPDPOXMLFileCompletedEventHandler(object sender, PutGPDPOXMLFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutGPDPOXMLFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutGPDPOXMLFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PutXMLFileCompletedEventHandler(object sender, PutXMLFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutXMLFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutXMLFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PutFileStreamFileCompletedEventHandler(object sender, PutFileStreamFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutFileStreamFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutFileStreamFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PutSignedFileByStreamCompletedEventHandler(object sender, PutSignedFileByStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutSignedFileByStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutSignedFileByStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileUrlByIDCompletedEventHandler(object sender, GetFileUrlByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileUrlByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileUrlByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileStreamByIDCompletedEventHandler(object sender, GetFileStreamByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStreamByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStreamByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileStringByIDCompletedEventHandler(object sender, GetFileStringByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStringByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStringByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileIDLatestCompletedEventHandler(object sender, GetFileIDLatestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileIDLatestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileIDLatestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileSignInfoCompletedEventHandler(object sender, GetFileSignInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileSignInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileSignInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileStreamLatestCompletedEventHandler(object sender, GetFileStreamLatestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStreamLatestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStreamLatestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileUrlLatestCompletedEventHandler(object sender, GetFileUrlLatestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileUrlLatestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileUrlLatestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetIDListCompletedEventHandler(object sender, GetIDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetUrlListCompletedEventHandler(object sender, GetUrlListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUrlListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUrlListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFilePathByIdCompletedEventHandler(object sender, GetFilePathByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePathByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePathByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PutSignInfoByIDCompletedEventHandler(object sender, PutSignInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutSignInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutSignInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetSignStyleCompletedEventHandler(object sender, SetSignStyleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSignStyleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSignStyleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateXMLFileCompletedEventHandler(object sender, UpdateXMLFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateXMLFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateXMLFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetFileInfoByNoCompletedEventHandler(object sender, GetFileInfoByNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoByNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoByNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateApprovedDataCompletedEventHandler(object sender, UpdateApprovedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApprovedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApprovedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetServiceListCompletedEventHandler(object sender, GetServiceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetCertTypeCompletedEventHandler(object sender, GetCertTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCertTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCertTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591